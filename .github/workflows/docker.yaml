name: Docker build

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  docker:
    name: Docker image generation
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      packages: write
      contents: read
    runs-on: oxford
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          # Check https://github.com/livepeer/go-livepeer/pull/1891
          # for ref value discussion
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cleanup hosted runner
        run: |
          sudo apt purge -yqq dotnet-* mono-* llvm-* libllvm* powershell* openjdk-* \
          temurin-* mongodb-* firefox mysql-* \
          hhvm google-chrome-stable \
          libgl1-mesa-dri microsoft-edge-stable azure-cli || true
          sudo apt autoremove -y
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Get build tags
        id: build-tag
        run: |
          ./ci_env.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            livepeer/go-livepeer
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=tag
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.pull_request.head.ref }}
            type=raw,value=stable,enable=${{ startsWith(github.event.ref, 'refs/tags/v') && github.event.base_ref == 'refs/heads/master' }}

      - name: Build and push livepeer docker image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            BUILD_TAGS=${{ steps.build-tag.outputs.build-tags }}
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: "docker/Dockerfile"
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=livepeerci/build:cache
          cache-to: type=registry,ref=livepeerci/build:cache,mode=max

  builder:
    name: go-livepeer builder docker image generation
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          # Check https://github.com/livepeer/go-livepeer/pull/1891
          # for ref value discussion
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cleanup hosted runner
        run: |
          sudo apt purge -yqq dotnet-* mono-* llvm-* libllvm* powershell* openjdk-* \
          temurin-* mongodb-* firefox mysql-* \
          hhvm google-chrome-stable \
          libgl1-mesa-dri microsoft-edge-stable azure-cli
          sudo apt autoremove -y
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - uses: actions-ecosystem/action-regex-match@v2
        id: match-tag
        with:
          text: ${{ github.ref_name }}
          regex: '^(main|master|v[0-9]+\.\d+\.\d+)$'

      - name: Get build tags
        id: build-tag
        run: |
          ./ci_env.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for builder image
        id: meta-builder
        uses: docker/metadata-action@v5
        with:
          images: |
            livepeerci/build
            ghcr.io/${{ github.repository }}/build
          tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=tag
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.pull_request.head.ref }}

      - name: Build and push livepeer builder
        if: ${{ steps.match-tag.outputs.match != '' }}
        uses: docker/build-push-action@v5
        with:
          build-args: |
            BUILD_TAGS=${{ steps.build-tag.outputs.build-tags }}
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta-builder.outputs.tags }}
          file: "docker/Dockerfile"
          target: build
          labels: ${{ steps.meta-builder.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
